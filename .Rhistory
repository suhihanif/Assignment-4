#| label: load-packages
#| warning: false
#| include: false
#clear environment
rm(list = ls())
# load packages and install if needed
pacman::p_load(pacman, tidyverse, knitr, kableExtra, sessionInfo)
#| label: data-check
#| warning: false
#| include: false
# read in cohort data
d <- read_csv("1-data/cohort.csv")
# inspect the dataset
head(d) # all variables are coded as numeric
# check for missing values
colSums(is.na(d)) # no missing values
#| label: desc-stat-table
#| warning: false
#| echo: false
# calculate stats for those with cardiac events
d_cardiac <- d %>% filter(cardiac == 1) %>%
select(-cardiac) %>%
summarise(across(everything(), mean)) %>%
pivot_longer(cols = everything(), names_to = "Variable", values_to = "Mean/%")
d_cardiac <- d_cardiac %>% mutate("N" = nrow(d %>% filter(cardiac == 1)))
# variables that should be percentages
percentage_vars <- c("smoke", "female")
# convert Mean/% column values from mean to percentage if relevant
d_cardiac <- d_cardiac %>%
mutate("Mean/%" = ifelse(Variable %in% percentage_vars,
paste0(sprintf("%.1f", `Mean/%` * 100), "%"),
sprintf("%.1f", `Mean/%`)))
# calculate stats for those without cardiac events
d_control <- d %>% filter(cardiac == 0) %>%
select(-cardiac) %>%
summarise(across(everything(), mean)) %>%
pivot_longer(cols = everything(), names_to = "Variable", values_to = "Mean/%")
d_control <- d_control %>% mutate("N" = nrow(d %>% filter(cardiac == 0)))
# convert Mean/% column values from mean to percentage if relevant
d_control <- d_control %>%
mutate("Mean/%" = ifelse(Variable %in% percentage_vars,
paste0(sprintf("%.1f", `Mean/%` * 100), "%"),
sprintf("%.1f", `Mean/%`)))
# join columns
stats <- d_control %>%
left_join(d_cardiac, by = "Variable")
# label variables
labels <- c("Smoker", "Is female", "Age (years)", "Cost of treatment ($)")
stats <- stats %>%
mutate(Variable = labels)
colnames(stats) <- c("Variable", "Mean/% (control)", "N (control)", "Mean/%", "N")
# save table 1
write.csv(stats, "3-output/table1.csv", row.names = FALSE)
# create formatted table with kable for report output
kable(stats, caption = "Table 1: Characteristics of study participants") %>%
kable_classic(full_width = F) %>%
add_header_above(header = c(" " = 1, "No Cardiac Event" = 2, "Cardiac Event" = 2)) %>%
kable_styling()
#| label: visualize-age-relationships
#| warning: false
#| include: false
# create bar plot of age by cardiac status
box <- ggplot(d, aes(x = factor(cardiac, labels = c("No event", "Cardiac event")), y = age)) +
geom_boxplot() +
xlab("Cardiac Event") +
ylab("Age") +
theme_classic()
# save box plot of age by cardiac event
ggsave(filename = "box_plot_age_cardiac.jpg", plot = box, path = "3-output")
# check median ages by cardiac group
cardiac_age <- median(d$age[d$cardiac == 1])
control_age <- median(d$age[d$cardiac == 0])
#| label: visualize-cost-relationships
#| warning: false
#| include: false
# create categorical variable for cardiac status
d <- d %>%
mutate(cardiac_cat = case_when(cardiac == 0 ~ "No cardiac event",
cardiac == 1 ~ "Cardiac event"))
# create density plot of cost by cardiac event status
plot <- ggplot(d, aes(x=cost, fill=cardiac_cat)) +
geom_density(alpha = 0.7) +
labs(fill="") +
xlab("Cost ($)") +
ylab("Density") +
theme_classic()
# save density plot
ggsave(filename = "density_plot_cost_cardiac.jpg", plot = plot, path = "3-output")
# remove categorical variable for cardiac event
d <- d %>% select(-cardiac_cat)
# range for costs
min_card <- sprintf("%.0f", min(d$cost[d$cardiac == 1]))
max_card <- sprintf("%.0f", max(d$cost[d$cardiac == 1]))
min_cont <- sprintf("%.0f", min(d$cost[d$cardiac == 0]))
max_cont <- sprintf("%.0f", max(d$cost[d$cardiac == 0]))
#| label: primary-analysis-regression
#| warning: false
#| echo: false
# run logistic regression
glm.fit1 <- glm(cardiac ~ smoke + female + age, data = d, family = "binomial")
tableit <- data.frame(summary(glm.fit1)$coef)
tableit$OR <- sprintf("%.2f", exp(tableit$Estimate))
tableit$LCL <- sprintf("%.2f", exp(tableit$Estimate - tableit$Std..Error * 1.96 ))
tableit$UCL <- sprintf("%.2f", exp(tableit$Estimate + tableit$Std..Error * 1.96 ))
tableit$`p-value` <- sprintf("%.3f", tableit$Pr...z..)
tableit <- tableit[, c("OR", "LCL", "UCL", "p-value")]
# add row labels
labels <- c("Intercept", "Smoker", "Is female", "Age (years)")
row.names(tableit) <- labels
# rename columns
colnames(tableit) <- c("Odds Ratio", "Lower", "Upper", "P value")
# create formatted table with kable for report output
kable(tableit, digits = 2, caption = "Table 2: Adjusted associations between smoking status, sex, age and cardiac events") %>%
kable_classic(full_width = F) %>%
kable_styling()
View(tableit)
#| label: load-packages
#| warning: false
#| include: false
#clear environment
rm(list = ls())
# load packages and install if needed
pacman::p_load(pacman, tidyverse, knitr, kableExtra, sessionInfo)
#| label: data-check
#| warning: false
#| include: false
# read in cohort data
d <- read_csv("1-data/cohort.csv")
# inspect the dataset
head(d) # all variables are coded as numeric
# check for missing values
colSums(is.na(d)) # no missing values
#| label: desc-stat-table
#| warning: false
#| echo: false
# calculate stats for those with cardiac events
d_cardiac <- d %>% filter(cardiac == 1) %>%
select(-cardiac) %>%
summarise(across(everything(), mean)) %>%
pivot_longer(cols = everything(), names_to = "Variable", values_to = "Mean/%")
d_cardiac <- d_cardiac %>% mutate("N" = nrow(d %>% filter(cardiac == 1)))
# variables that should be percentages
percentage_vars <- c("smoke", "female")
# convert Mean/% column values from mean to percentage if relevant
d_cardiac <- d_cardiac %>%
mutate("Mean/%" = ifelse(Variable %in% percentage_vars,
paste0(sprintf("%.1f", `Mean/%` * 100), "%"),
sprintf("%.1f", `Mean/%`)))
# calculate stats for those without cardiac events
d_control <- d %>% filter(cardiac == 0) %>%
select(-cardiac) %>%
summarise(across(everything(), mean)) %>%
pivot_longer(cols = everything(), names_to = "Variable", values_to = "Mean/%")
d_control <- d_control %>% mutate("N" = nrow(d %>% filter(cardiac == 0)))
# convert Mean/% column values from mean to percentage if relevant
d_control <- d_control %>%
mutate("Mean/%" = ifelse(Variable %in% percentage_vars,
paste0(sprintf("%.1f", `Mean/%` * 100), "%"),
sprintf("%.1f", `Mean/%`)))
# join columns
stats <- d_control %>%
left_join(d_cardiac, by = "Variable")
# label variables
labels <- c("Smoker", "Is female", "Age (years)", "Cost of treatment ($)")
stats <- stats %>%
mutate(Variable = labels)
colnames(stats) <- c("Variable", "Mean/% (control)", "N (control)", "Mean/%", "N")
# save table 1
write.csv(stats, "3-output/table1.csv", row.names = FALSE)
# create formatted table with kable for report output
kable(stats, caption = "Table 1: Characteristics of study participants") %>%
kable_classic(full_width = F) %>%
add_header_above(header = c(" " = 1, "No Cardiac Event" = 2, "Cardiac Event" = 2)) %>%
kable_styling()
#| label: visualize-age-relationships
#| warning: false
#| include: false
# create bar plot of age by cardiac status
box <- ggplot(d, aes(x = factor(cardiac, labels = c("No event", "Cardiac event")), y = age)) +
geom_boxplot() +
xlab("Cardiac Event") +
ylab("Age") +
theme_classic()
# save box plot of age by cardiac event
ggsave(filename = "box_plot_age_cardiac.jpg", plot = box, path = "3-output")
# check median ages by cardiac group
cardiac_age <- median(d$age[d$cardiac == 1])
control_age <- median(d$age[d$cardiac == 0])
#| label: visualize-cost-relationships
#| warning: false
#| include: false
# create categorical variable for cardiac status
d <- d %>%
mutate(cardiac_cat = case_when(cardiac == 0 ~ "No cardiac event",
cardiac == 1 ~ "Cardiac event"))
# create density plot of cost by cardiac event status
plot <- ggplot(d, aes(x=cost, fill=cardiac_cat)) +
geom_density(alpha = 0.7) +
labs(fill="") +
xlab("Cost ($)") +
ylab("Density") +
theme_classic()
# save density plot
ggsave(filename = "density_plot_cost_cardiac.jpg", plot = plot, path = "3-output")
# remove categorical variable for cardiac event
d <- d %>% select(-cardiac_cat)
# range for costs
min_card <- sprintf("%.0f", min(d$cost[d$cardiac == 1]))
max_card <- sprintf("%.0f", max(d$cost[d$cardiac == 1]))
min_cont <- sprintf("%.0f", min(d$cost[d$cardiac == 0]))
max_cont <- sprintf("%.0f", max(d$cost[d$cardiac == 0]))
#| label: primary-analysis-regression
#| warning: false
#| echo: false
# run logistic regression
glm.fit1 <- glm(cardiac ~ smoke + female + age, data = d, family = "binomial")
tableit <- data.frame(summary(glm.fit1)$coef)
tableit$OR <- sprintf("%.2f", exp(tableit$Estimate))
tableit$LCL <- sprintf("%.2f", exp(tableit$Estimate - tableit$Std..Error * 1.96 ))
tableit$UCL <- sprintf("%.2f", exp(tableit$Estimate + tableit$Std..Error * 1.96 ))
tableit$`p-value` <- sprintf("%.3f", tableit$Pr...z..)
tableit <- tableit[, c("OR", "LCL", "UCL", "p-value")]
# add row labels
labels <- c("Intercept", "Smoker", "Is female", "Age (years)")
row.names(tableit) <- labels
# rename columns
colnames(tableit) <- c("Odds Ratio", "Lower", "Upper", "P value")
# create formatted table with kable for report output
kable(tableit, digits = 2, caption = "Table 2: Adjusted associations between smoking status, sex, age and cardiac events") %>%
kable_classic(full_width = F) %>%
kable_styling()
# save table 2
write.csv(tableit, "3-output/reg_out1.csv", row.names = FALSE)
#| label: load-packages
#| warning: false
#| include: false
#clear environment
rm(list = ls())
# load packages and install if needed
pacman::p_load(pacman, tidyverse, knitr, kableExtra, sessionInfo)
#| label: data-check
#| warning: false
#| include: false
# read in cohort data
d <- read_csv("1-data/cohort.csv")
# inspect the dataset
head(d) # all variables are coded as numeric
# check for missing values
colSums(is.na(d)) # no missing values
#| label: desc-stat-table
#| warning: false
#| echo: false
# calculate stats for those with cardiac events
d_cardiac <- d %>% filter(cardiac == 1) %>%
select(-cardiac) %>%
summarise(across(everything(), mean)) %>%
pivot_longer(cols = everything(), names_to = "Variable", values_to = "Mean/%")
d_cardiac <- d_cardiac %>% mutate("N" = nrow(d %>% filter(cardiac == 1)))
# variables that should be percentages
percentage_vars <- c("smoke", "female")
# convert Mean/% column values from mean to percentage if relevant
d_cardiac <- d_cardiac %>%
mutate("Mean/%" = ifelse(Variable %in% percentage_vars,
paste0(sprintf("%.1f", `Mean/%` * 100), "%"),
sprintf("%.1f", `Mean/%`)))
# calculate stats for those without cardiac events
d_control <- d %>% filter(cardiac == 0) %>%
select(-cardiac) %>%
summarise(across(everything(), mean)) %>%
pivot_longer(cols = everything(), names_to = "Variable", values_to = "Mean/%")
d_control <- d_control %>% mutate("N" = nrow(d %>% filter(cardiac == 0)))
# convert Mean/% column values from mean to percentage if relevant
d_control <- d_control %>%
mutate("Mean/%" = ifelse(Variable %in% percentage_vars,
paste0(sprintf("%.1f", `Mean/%` * 100), "%"),
sprintf("%.1f", `Mean/%`)))
# join columns
stats <- d_control %>%
left_join(d_cardiac, by = "Variable")
# label variables
labels <- c("Smoker", "Is female", "Age (years)", "Cost of treatment ($)")
stats <- stats %>%
mutate(Variable = labels)
colnames(stats) <- c("Variable", "Mean/% (control)", "N (control)", "Mean/%", "N")
# save table 1
write.csv(stats, "3-output/table1.csv", row.names = FALSE)
# create formatted table with kable for report output
kable(stats, caption = "Table 1: Characteristics of study participants") %>%
kable_classic(full_width = F) %>%
add_header_above(header = c(" " = 1, "No Cardiac Event" = 2, "Cardiac Event" = 2)) %>%
kable_styling()
#| label: visualize-age-relationships
#| warning: false
#| include: false
# create bar plot of age by cardiac status
box <- ggplot(d, aes(x = factor(cardiac, labels = c("No event", "Cardiac event")), y = age)) +
geom_boxplot() +
xlab("Cardiac Event") +
ylab("Age") +
theme_classic()
# save box plot of age by cardiac event
ggsave(filename = "box_plot_age_cardiac.jpg", plot = box, path = "3-output")
# check median ages by cardiac group
cardiac_age <- median(d$age[d$cardiac == 1])
control_age <- median(d$age[d$cardiac == 0])
#| label: visualize-cost-relationships
#| warning: false
#| include: false
# create categorical variable for cardiac status
d <- d %>%
mutate(cardiac_cat = case_when(cardiac == 0 ~ "No cardiac event",
cardiac == 1 ~ "Cardiac event"))
# create density plot of cost by cardiac event status
plot <- ggplot(d, aes(x=cost, fill=cardiac_cat)) +
geom_density(alpha = 0.7) +
labs(fill="") +
xlab("Cost ($)") +
ylab("Density") +
theme_classic()
# save density plot
ggsave(filename = "density_plot_cost_cardiac.jpg", plot = plot, path = "3-output")
# remove categorical variable for cardiac event
d <- d %>% select(-cardiac_cat)
# range for costs
min_card <- sprintf("%.0f", min(d$cost[d$cardiac == 1]))
max_card <- sprintf("%.0f", max(d$cost[d$cardiac == 1]))
min_cont <- sprintf("%.0f", min(d$cost[d$cardiac == 0]))
max_cont <- sprintf("%.0f", max(d$cost[d$cardiac == 0]))
#| label: primary-analysis-regression
#| warning: false
#| echo: false
# run logistic regression
glm.fit1 <- glm(cardiac ~ smoke + female + age, data = d, family = "binomial")
tableit <- data.frame(summary(glm.fit1)$coef)
tableit$OR <- sprintf("%.2f", exp(tableit$Estimate))
tableit$LCL <- sprintf("%.2f", exp(tableit$Estimate - tableit$Std..Error * 1.96 ))
tableit$UCL <- sprintf("%.2f", exp(tableit$Estimate + tableit$Std..Error * 1.96 ))
tableit$`p-value` <- sprintf("%.3f", tableit$Pr...z..)
tableit <- tableit[, c("OR", "LCL", "UCL", "p-value")]
# add row labels
labels <- c("Intercept", "Smoker", "Is female", "Age (years)")
row.names(tableit) <- labels
# rename columns
colnames(tableit) <- c("Odds Ratio", "Lower", "Upper", "P value")
# create formatted table with kable for report output
kable(tableit, digits = 2, caption = "Table 2: Adjusted associations between smoking status, sex, age and cardiac events") %>%
kable_classic(full_width = F) %>%
kable_styling()
# save table 2
write.csv(tableit, "3-output/reg_out1.csv", row.names = FALSE)
#| label: secondary-analysis-regression
#| warning: false
#| echo: false
# run logistic regression with interaction term for cost and smoking
glm.fit2 <- glm(cardiac ~ female + age + cost + smoke*cost, data = d, family = "binomial")
tableit2 <- data.frame(summary(glm.fit2)$coef)
tableit2$OR <- sprintf("%.2f", exp(tableit2$Estimate))
tableit2$LCL <- sprintf("%.2f", exp(tableit2$Estimate - tableit2$Std..Error * 1.96 ))
tableit2$UCL <- sprintf("%.2f", exp(tableit2$Estimate + tableit2$Std..Error * 1.96 ))
tableit2$`p-value` <- sprintf("%.3f", tableit2$Pr...z..)
tableit2 <- tableit2[, c("OR", "LCL", "UCL", "p-value")]
# add row labels
labels2 <- c("Intercept", "Smoker", "Is female", "Age (years)", "Cost of treatment ($)", "Smoker × Cost interaction")
row.names(tableit2) <- labels2
# rename columns
colnames(tableit2) <- c("Odds Ratio", "Lower", "Upper", "P value")
# create formatted table with kable for report output
kable(tableit2, digits = 2, caption = "Table 3: Adjusted associations for cost modification of smoking and cardiac events") %>%
kable_classic(full_width = F) %>%
kable_styling()
# save table 3
write.csv(tableit2, "3-output/reg_out2.csv", row.names = FALSE)
View(tableit2)
#| label: load-packages
#| warning: false
#| include: false
#clear environment
rm(list = ls())
# load packages and install if needed
pacman::p_load(pacman, tidyverse, knitr, kableExtra, sessionInfo)
#| label: data-check
#| warning: false
#| include: false
# read in cohort data
d <- read_csv("1-data/cohort.csv")
# inspect the dataset
head(d) # all variables are coded as numeric
# check for missing values
colSums(is.na(d)) # no missing values
#| label: desc-stat-table
#| warning: false
#| echo: false
# calculate stats for those with cardiac events
d_cardiac <- d %>% filter(cardiac == 1) %>%
select(-cardiac) %>%
summarise(across(everything(), mean)) %>%
pivot_longer(cols = everything(), names_to = "Variable", values_to = "Mean/%")
d_cardiac <- d_cardiac %>% mutate("N" = nrow(d %>% filter(cardiac == 1)))
# variables that should be percentages
percentage_vars <- c("smoke", "female")
# convert Mean/% column values from mean to percentage if relevant
d_cardiac <- d_cardiac %>%
mutate("Mean/%" = ifelse(Variable %in% percentage_vars,
paste0(sprintf("%.1f", `Mean/%` * 100), "%"),
sprintf("%.1f", `Mean/%`)))
# calculate stats for those without cardiac events
d_control <- d %>% filter(cardiac == 0) %>%
select(-cardiac) %>%
summarise(across(everything(), mean)) %>%
pivot_longer(cols = everything(), names_to = "Variable", values_to = "Mean/%")
d_control <- d_control %>% mutate("N" = nrow(d %>% filter(cardiac == 0)))
# convert Mean/% column values from mean to percentage if relevant
d_control <- d_control %>%
mutate("Mean/%" = ifelse(Variable %in% percentage_vars,
paste0(sprintf("%.1f", `Mean/%` * 100), "%"),
sprintf("%.1f", `Mean/%`)))
# join columns
stats <- d_control %>%
left_join(d_cardiac, by = "Variable")
# label variables
labels <- c("Smoker", "Is female", "Age (years)", "Cost of treatment ($)")
stats <- stats %>%
mutate(Variable = labels)
colnames(stats) <- c("Variable", "Mean/% (control)", "N (control)", "Mean/%", "N")
# save table 1
write.csv(stats, "3-output/table1.csv", row.names = FALSE)
# create formatted table with kable for report output
kable(stats, caption = "Table 1: Characteristics of study participants") %>%
kable_classic(full_width = F) %>%
add_header_above(header = c(" " = 1, "No Cardiac Event" = 2, "Cardiac Event" = 2)) %>%
kable_styling()
#| label: visualize-age-relationships
#| warning: false
#| include: false
# create bar plot of age by cardiac status
box <- ggplot(d, aes(x = factor(cardiac, labels = c("No event", "Cardiac event")), y = age)) +
geom_boxplot() +
xlab("Cardiac Event") +
ylab("Age") +
theme_classic()
# save box plot of age by cardiac event
ggsave(filename = "box_plot_age_cardiac.jpg", plot = box, path = "3-output")
# check median ages by cardiac group
cardiac_age <- median(d$age[d$cardiac == 1])
control_age <- median(d$age[d$cardiac == 0])
#| label: visualize-cost-relationships
#| warning: false
#| include: false
# create categorical variable for cardiac status
d <- d %>%
mutate(cardiac_cat = case_when(cardiac == 0 ~ "No cardiac event",
cardiac == 1 ~ "Cardiac event"))
# create density plot of cost by cardiac event status
plot <- ggplot(d, aes(x=cost, fill=cardiac_cat)) +
geom_density(alpha = 0.7) +
labs(fill="") +
xlab("Cost ($)") +
ylab("Density") +
theme_classic()
# save density plot
ggsave(filename = "density_plot_cost_cardiac.jpg", plot = plot, path = "3-output")
# remove categorical variable for cardiac event
d <- d %>% select(-cardiac_cat)
# range for costs
min_card <- sprintf("%.0f", min(d$cost[d$cardiac == 1]))
max_card <- sprintf("%.0f", max(d$cost[d$cardiac == 1]))
min_cont <- sprintf("%.0f", min(d$cost[d$cardiac == 0]))
max_cont <- sprintf("%.0f", max(d$cost[d$cardiac == 0]))
#| label: primary-analysis-regression
#| warning: false
#| echo: false
# run logistic regression
glm.fit1 <- glm(cardiac ~ smoke + female + age, data = d, family = "binomial")
tableit <- data.frame(summary(glm.fit1)$coef)
tableit$OR <- sprintf("%.2f", exp(tableit$Estimate))
tableit$LCL <- sprintf("%.2f", exp(tableit$Estimate - tableit$Std..Error * 1.96 ))
tableit$UCL <- sprintf("%.2f", exp(tableit$Estimate + tableit$Std..Error * 1.96 ))
tableit$`p-value` <- sprintf("%.3f", tableit$Pr...z..)
tableit <- tableit[, c("OR", "LCL", "UCL", "p-value")]
# add row labels
labels <- c("Intercept", "Smoker", "Is female", "Age (years)")
row.names(tableit) <- labels
# rename columns
colnames(tableit) <- c("Odds Ratio", "Lower", "Upper", "P value")
# create formatted table with kable for report output
kable(tableit, digits = 2, caption = "Table 2: Adjusted associations between smoking status, sex, age and cardiac events") %>%
kable_classic(full_width = F) %>%
kable_styling()
# save table 2
write.csv(tableit, "3-output/reg_out1.csv", row.names = FALSE)
#| label: secondary-analysis-regression
#| warning: false
#| echo: false
# run logistic regression with interaction term for cost and smoking
glm.fit2 <- glm(cardiac ~ female + age + cost + smoke*cost, data = d, family = "binomial")
tableit2 <- data.frame(summary(glm.fit2)$coef)
tableit2$OR <- sprintf("%.2f", exp(tableit2$Estimate))
tableit2$LCL <- sprintf("%.2f", exp(tableit2$Estimate - tableit2$Std..Error * 1.96 ))
tableit2$UCL <- sprintf("%.2f", exp(tableit2$Estimate + tableit2$Std..Error * 1.96 ))
tableit2$`p-value` <- sprintf("%.3f", tableit2$Pr...z..)
tableit2 <- tableit2[, c("OR", "LCL", "UCL", "p-value")]
# add row labels
labels2 <- c("Intercept", "Smoker", "Is female", "Age (years)", "Cost of treatment ($)", "Smoker × Cost interaction")
row.names(tableit2) <- labels2
# rename columns
colnames(tableit2) <- c("Odds Ratio", "Lower", "Upper", "P value")
# create formatted table with kable for report output
kable(tableit2, digits = 2, caption = "Table 3: Effect modification by cost of treatment") %>%
kable_classic(full_width = F) %>%
kable_styling()
# save table 3
write.csv(tableit2, "3-output/reg_out2.csv", row.names = FALSE)
